CREATE DATABASE StartupConnect
    CHARACTER SET utf8mb4
    COLLATE utf8mb4_unicode_ci;

USE StartupConnect;

CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('entrepreneur', 'investor', 'job_seeker', 'admin') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Entrepreneurs (
    entrepreneur_id INT PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (entrepreneur_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE Investors (
    investor_id INT PRIMARY KEY,
    investment_range_min DECIMAL(15, 2) NOT NULL,
    investment_range_max DECIMAL(15, 2) NOT NULL,
    preferred_industries JSON,
    preferred_locations JSON,
    funding_stage_preferences JSON,
    bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (investor_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE Job_Seekers (
    job_seeker_id INT PRIMARY KEY,
    resume_url VARCHAR(255),
    skills JSON,
    preferred_industries JSON,
    desired_role VARCHAR(255),
    experience_level ENUM('entry', 'mid', 'senior') NOT NULL,
    location_preference VARCHAR(255),
    bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (job_seeker_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE Startups (
    startup_id INT AUTO_INCREMENT PRIMARY KEY,
    entrepreneur_id INT NOT NULL,
    name VARCHAR(255) NOT NULL UNIQUE,
    industry VARCHAR(255) NOT NULL,
    description TEXT,
    location VARCHAR(255),
    funding_needed DECIMAL(15, 2),
    pitch_deck_url VARCHAR(255),
    business_plan_url VARCHAR(255),
    approval_status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending',
    approved_by INT DEFAULT NULL,
    approval_comment TEXT DEFAULT NULL,
    logo_url VARCHAR(255),
    video_url VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (entrepreneur_id) REFERENCES Entrepreneurs(entrepreneur_id) ON DELETE CASCADE,
    FOREIGN KEY (approved_by) REFERENCES Users(user_id) ON DELETE SET NULL
);

CREATE TABLE Jobs (
    job_id INT AUTO_INCREMENT PRIMARY KEY,
    startup_id INT NOT NULL,
    role VARCHAR(255) NOT NULL,
    description TEXT,
    requirements TEXT,
    location VARCHAR(255),
    salary_range_min DECIMAL(15, 2),
    salary_range_max DECIMAL(15, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (startup_id) REFERENCES Startups(startup_id) ON DELETE CASCADE
);

CREATE TABLE Matches (
    match_id INT AUTO_INCREMENT PRIMARY KEY,
    startup_id INT NOT NULL,
    investor_id INT NOT NULL,
    match_score DECIMAL(5, 2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (startup_id) REFERENCES Startups(startup_id) ON DELETE CASCADE,
    FOREIGN KEY (investor_id) REFERENCES Investors(investor_id) ON DELETE CASCADE
);

CREATE TABLE Applications (
    application_id INT AUTO_INCREMENT PRIMARY KEY,
    job_id INT NOT NULL,
    job_seeker_id INT NOT NULL,
    status ENUM('applied', 'reviewed', 'interviewed', 'hired', 'rejected') DEFAULT 'applied',
    cover_letter TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (job_id) REFERENCES Jobs(job_id) ON DELETE CASCADE,
    FOREIGN KEY (job_seeker_id) REFERENCES Job_Seekers(job_seeker_id) ON DELETE CASCADE
);

CREATE TABLE Messages (
    message_id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,
    receiver_id INT NOT NULL,
    content TEXT NOT NULL,
    status ENUM('unread', 'read') DEFAULT 'unread',
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE Notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Recipient of the notification
    sender_id INT DEFAULT NULL, -- Optional: Who triggered the notification
    type ENUM('message', 'application_status', 'investment_match', 'job_offer', 'system_alert', 'startup_status') NOT NULL,
    message TEXT NOT NULL,
    status ENUM('unread', 'read') DEFAULT 'unread',
    job_id INT NULL,
    application_id INT NULL,
    match_id INT NULL,
    url VARCHAR(255) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (sender_id) REFERENCES Users(user_id) ON DELETE SET NULL,
    FOREIGN KEY (job_id) REFERENCES Jobs(job_id) ON DELETE SET NULL,
    FOREIGN KEY (application_id) REFERENCES Applications(application_id) ON DELETE SET NULL,
    FOREIGN KEY (match_id) REFERENCES Matches(match_id) ON DELETE SET NULL
);

DELIMITER $$

CREATE TRIGGER job_application_notification
AFTER INSERT ON Applications
FOR EACH ROW
BEGIN
    INSERT INTO Notifications (user_id, sender_id, type, message, job_id, application_id, status)
    VALUES (
        (SELECT entrepreneur_id FROM Startups WHERE startup_id = (SELECT startup_id FROM Jobs WHERE job_id = NEW.job_id)),
        NEW.job_seeker_id,
        'application_status',
        CONCAT('Job seeker ', (SELECT name FROM Users WHERE user_id = NEW.job_seeker_id), ' applied for your job: ', (SELECT role FROM Jobs WHERE job_id = NEW.job_id)),
        NEW.job_id,
        NEW.application_id,
        'unread'
    );
END $$

DELIMITER $$

CREATE TRIGGER application_status_update_notification
AFTER UPDATE ON Applications
FOR EACH ROW
BEGIN
    INSERT INTO Notifications (user_id, sender_id, type, message, application_id, status)
    VALUES (
        NEW.job_seeker_id,
        (SELECT entrepreneur_id FROM Startups WHERE startup_id = (SELECT startup_id FROM Jobs WHERE job_id = NEW.job_id)),
        'application_status',
        CONCAT('The status of your application for job: ', (SELECT role FROM Jobs WHERE job_id = NEW.job_id), ' has been updated to: ', NEW.status),
        NEW.application_id,
        'unread'
    );
END $$

DELIMITER $$

CREATE TRIGGER startup_status_update_notification
AFTER UPDATE ON Startups
FOR EACH ROW
BEGIN
    IF OLD.approval_status != NEW.approval_status THEN
        INSERT INTO Notifications (user_id, sender_id, type, message, status)
        VALUES (
            (SELECT entrepreneur_id FROM Startups WHERE startup_id = NEW.startup_id),
            NULL,
            'startup_status',
            CONCAT('Your startup ', NEW.name, ' has been updated to: ', NEW.approval_status),
            'unread'
        );
    END IF;
END $$

DELIMITER ;
